package athletedatabase;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class RemoveEvent extends javax.swing.JFrame {

    private static final String url = "jdbc:sqlite:C:/Users/apple/Documents/CaH2O/komsaiPaMore/Komsai 127/ProjectGalore/AthleteDatabase.db";  
    
    private String name;
    private Boolean nameStatus = false;
    
    /**
     * Creates new form RemoveEvent
     */
    public RemoveEvent() {
        initComponents();
        updateTextArea();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        eventNameTextField = new javax.swing.JTextField();
        removeEventButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        eventsTextArea = new javax.swing.JTextArea();
        goBackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(250, 95));
        setMaximumSize(new java.awt.Dimension(748, 447));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 204, 255));
        jPanel3.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel3.setFont(new java.awt.Font("Matura MT Script Capitals", 0, 24)); // NOI18N
        jLabel3.setText("Athlete Database");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(259, 259, 259)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(257, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 57, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addComponent(jLabel3)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel6.setBackground(new java.awt.Color(220, 220, 220));
        jPanel6.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Enter event's name:");

        eventNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                eventNameTextFieldKeyReleased(evt);
            }
        });

        removeEventButton.setBackground(new java.awt.Color(153, 153, 255));
        removeEventButton.setFont(new java.awt.Font("Cooper Black", 0, 14)); // NOI18N
        removeEventButton.setText("Remove Event");
        removeEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeEventButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Events:");

        eventsTextArea.setEditable(false);
        eventsTextArea.setColumns(20);
        eventsTextArea.setRows(5);
        jScrollPane1.setViewportView(eventsTextArea);

        goBackButton.setBackground(new java.awt.Color(220, 220, 220));
        goBackButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        goBackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/athletedatabase/arrow.png"))); // NOI18N
        goBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(goBackButton)
                .addGap(2, 2, 2)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGap(8, 8, 8)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(eventNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeEventButton))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eventNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removeEventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(goBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void removeEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeEventButtonActionPerformed
        if(nameStatus){
            Connection conn = null;
            Statement stmt = null;
            try{
                Class.forName("org.sqlite.JDBC");
                conn = DriverManager.getConnection(url);
                stmt = conn.createStatement();

                String exe = "DELETE FROM Event WHERE eventName == '" + name + "'";
                stmt.executeUpdate(exe);
                System.out.println("Event deleted!");
                eventNameTextField.setText("");
                updateTextArea();
            }catch(SQLException e){
                System.out.println("SQLException from 'RemoveEvent.java-RemoveButtonActionPerformed'" + e.getMessage());
            }catch(Exception e){
                System.out.println("Exception from 'RemoveEvent.java-RemoveButtonActionPerformed'" + e.getMessage());
            }finally{
                try{
                    if(stmt != null){
                        conn.close();
                    }
                }catch(SQLException e){
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_removeEventButtonActionPerformed

    private void goBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackButtonActionPerformed
        RemoveMenu removeMenu = new RemoveMenu();
        this.setVisible(false);
        removeMenu.setVisible(true);
    }//GEN-LAST:event_goBackButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        RemoveMenu removeMenu = new RemoveMenu();
        this.setVisible(false);
        removeMenu.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
         GUI menu = new GUI();
         this.setVisible(false);
         menu.setVisible(true);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void eventNameTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eventNameTextFieldKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String data = eventNameTextField.getText();
            if(data == null){
                JOptionPane.showMessageDialog(this, "Enter event name.", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                Connection conn = null;
                Statement stmt = null;
                try{
                    Class.forName("org.sqlite.JDBC");
                    conn = DriverManager.getConnection(url);
                    stmt = conn.createStatement();

                    String exe = "SELECT eventName FROM Event";
                    ResultSet rs = stmt.executeQuery(exe);
                    Boolean found = false;
                    while(rs.next()){
                        if(rs.getString("eventName").equals(data)){
                            found = true;
                            break;
                        }
                    }

                    if(found){
                        name = data;
                        nameStatus = true;
                        eventNameTextField.setFocusable(false);
                    }else{
                        JOptionPane.showMessageDialog(this, "Event not found.", "Error", JOptionPane.ERROR_MESSAGE);
                        eventNameTextField.setText("");
                    }

                    rs.close();
                }catch(SQLException e){
                    System.out.println("SQLException from 'RemoveEvent.java-eventNameTextFieldKeyReleased'" + e.getMessage());
                }catch(Exception e){
                    System.out.println("Exception from 'RemoveEvent.java-eventNameTextFieldKeyReleased'" + e.getMessage());
                }finally{
                    try{
                        if(stmt != null){
                            conn.close();
                        }
                    }catch(SQLException e){
                        e.printStackTrace();
                    }
                }
            }
        }
    }//GEN-LAST:event_eventNameTextFieldKeyReleased

    private void updateTextArea(){
        Connection conn = null;
        Statement stmt = null;
        ArrayList<Event> eventList = new ArrayList<>();
        ArrayList<Athlete> athleteList = new ArrayList<>();
        
        try{
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection(url);
            stmt = conn.createStatement();
            
            String exe = "SELECT * FROM Event ORDER BY eventName ASC";
            ResultSet rs = stmt.executeQuery(exe);
            
            while(rs.next()){
                Event event = new Event(rs.getInt("athleteID"), rs.getInt("sportID"), rs.getString("eventName"), rs.getString("eventVenue"), rs.getString("eventMonth"), rs.getInt("eventDay"), rs.getInt("eventYear"), rs.getString("eventTime"));
                eventList.add(event);
            }
            
            exe = "SELECT athleteID, athleteName FROM Athlete";
            rs = stmt.executeQuery(exe);
            while(rs.next()){
                Athlete athlete = new Athlete(rs.getInt("athleteID"), rs.getString("athleteName"));
                athleteList.add(athlete);
            }
            
            rs.close();
        }catch(SQLException e){
            System.out.println("SQLException from 'RemoveEvent.java-updateTextArea': " + e.getMessage());
        }catch(Exception e){
            System.out.println("SQLException from 'RemoveEvent.java-updateTextArea': " + e.getMessage());
        }finally{
            try{
                if(stmt != null){
                    conn.close();
                }
            }catch(SQLException e){
                e.printStackTrace();
            }
        }
        
        int number = 1;
        String name = eventList.get(0).getName();
        String list = number + ". " + name + "\n";
        list += "          Athletes:\n";
        
        for(int i = 0; i < eventList.size(); i++){
            Event e = eventList.get(i);
            
            if(name.equals(e.getName())){
                list = athleteList(list, athleteList, e);
            }else{
                number++;
                list += "\n\n" + number + ". " + e.getName() + "\n";
                list += "          Athletes:\n";
                list = athleteList(list, athleteList, e);
            }
            name = e.getName();
        }
        
        eventsTextArea.setText(list); 
    }
    
    private String athleteList(String list, ArrayList<Athlete> athleteList, Event e){
        for(Athlete a : athleteList){
            if(e.getAthleteID() == a.getID()){
                list += "               - " + a.getName() + "\n                    Schedule: " + e.getMonth() + " " + e.getDay() + ", " + e.getYear() + " " + e.getTime() + "\n\n";
            }
        }
        return list;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RemoveEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RemoveEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RemoveEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RemoveEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RemoveEvent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField eventNameTextField;
    private javax.swing.JTextArea eventsTextArea;
    private javax.swing.JButton goBackButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeEventButton;
    // End of variables declaration//GEN-END:variables
}

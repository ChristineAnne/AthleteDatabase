package athletedatabase;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

public class AddMenu extends javax.swing.JFrame {

    private static final String url = "jdbc:sqlite:C:/Users/apple/Documents/CaH2O/komsaiPaMore/Komsai 127/ProjectGalore/AthleteDatabase.db";
    
    /**
     * Creates new form AddMenu
     */
    public AddMenu() {
        initComponents();
        defaultAthleteView();
        viewAthleteButton.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        addAthleteButton = new javax.swing.JButton();
        addEventButton = new javax.swing.JButton();
        addSportButton = new javax.swing.JButton();
        viewAthleteButton = new javax.swing.JRadioButton();
        viewEventButton = new javax.swing.JRadioButton();
        viewSportButton = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewTextArea = new javax.swing.JTextArea();
        mainMenuButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setLocation(new java.awt.Point(250, 95));
        setMaximumSize(new java.awt.Dimension(748, 447));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 204, 255));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel1.setFont(new java.awt.Font("Matura MT Script Capitals", 0, 24)); // NOI18N
        jLabel1.setText("Athlete Database");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 746, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(259, 259, 259)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(257, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 57, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addComponent(jLabel1)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel2.setBackground(new java.awt.Color(220, 220, 220));
        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));

        addAthleteButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addAthleteButton.setText("Add Athlete");
        addAthleteButton.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(51, 0, 204)));
        addAthleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAthleteButtonActionPerformed(evt);
            }
        });

        addEventButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addEventButton.setText("Add Event");
        addEventButton.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(51, 0, 204)));
        addEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEventButtonActionPerformed(evt);
            }
        });

        addSportButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addSportButton.setText("Add Sport");
        addSportButton.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(51, 0, 204)));
        addSportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSportButtonActionPerformed(evt);
            }
        });

        viewAthleteButton.setBackground(new java.awt.Color(220, 220, 220));
        viewAthleteButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        viewAthleteButton.setText("View Athletes");
        viewAthleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewAthleteButtonMouseClicked(evt);
            }
        });
        viewAthleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAthleteButtonActionPerformed(evt);
            }
        });

        viewEventButton.setBackground(new java.awt.Color(220, 220, 220));
        viewEventButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        viewEventButton.setText("View Events");
        viewEventButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewEventButtonMouseClicked(evt);
            }
        });
        viewEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEventButtonActionPerformed(evt);
            }
        });

        viewSportButton.setBackground(new java.awt.Color(220, 220, 220));
        viewSportButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        viewSportButton.setText("View Sports");
        viewSportButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewSportButtonMouseClicked(evt);
            }
        });
        viewSportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewSportButtonActionPerformed(evt);
            }
        });

        viewTextArea.setEditable(false);
        viewTextArea.setColumns(20);
        viewTextArea.setRows(5);
        jScrollPane1.setViewportView(viewTextArea);

        mainMenuButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        mainMenuButton.setText("Main Menu");
        mainMenuButton.setBorder(null);
        mainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(viewAthleteButton)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addAthleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(viewEventButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(viewSportButton))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(260, 260, 260)
                        .addComponent(addEventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(addSportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addSportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addEventButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addAthleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewAthleteButton)
                    .addComponent(viewEventButton)
                    .addComponent(viewSportButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addAthleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAthleteButtonActionPerformed
        AddAthlete addAthlete = new AddAthlete();
        this.setVisible(false);
        addAthlete.setVisible(true);        
    }//GEN-LAST:event_addAthleteButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        GUI menu = new GUI();
        menu.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void addEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEventButtonActionPerformed
        AddEvent addEvent = new AddEvent();
        this.setVisible(false);
        addEvent.setVisible(true);
    }//GEN-LAST:event_addEventButtonActionPerformed

    private void addSportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSportButtonActionPerformed
        AddSport addSport = new AddSport();
        this.setVisible(false);
        addSport.setVisible(true);
    }//GEN-LAST:event_addSportButtonActionPerformed

    private void mainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuButtonActionPerformed
        GUI menu = new GUI();
        this.setVisible(false);
        menu.setVisible(true);
    }//GEN-LAST:event_mainMenuButtonActionPerformed

    private void viewAthleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAthleteButtonActionPerformed
        defaultAthleteView();
    }//GEN-LAST:event_viewAthleteButtonActionPerformed

    private void viewSportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewSportButtonActionPerformed
        Connection conn = null;
        Statement stmt = null;
        ArrayList<Sport> sportList = new ArrayList<>();
        
        try{
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection(url);
            stmt = conn.createStatement();
            
            String exe = "SELECT * FROM Sport ORDER BY sportName ASC";
            ResultSet rs = stmt.executeQuery(exe);
            
            while(rs.next()){
                Sport sport = new Sport(rs.getInt("sportID"), rs.getString("sportName"), rs.getInt("sportType"));
                sportList.add(sport);
            }
            
            rs.close();
        }catch(SQLException e){
            System.out.println("SQLException from 'AddMenu.java-viewSportButton': " + e.getMessage());
        }catch(Exception e){
            System.out.println("Exception from 'AddMenu.java-viewSportButton': " + e.getMessage());
        }finally{
            try{
                if(stmt != null){
                    conn.close();
                }
            }catch(SQLException e){
                e.printStackTrace();
            }
        }
        
        String list = "\t\t\t        SPORTS\n";
        int i = 1;
        for(Sport s : sportList){
            list += i + ". " + s.getName() + "\n               ID: " + s.getID() + "\n               Type of game: ";
            if(s.getType() == 1){
                list += "Single Player\n\n";
            }else if(s.getType() == 2){
                list += "Multiple Player\n\n";
            }
            i++;
        }
        
        viewTextArea.setText(list);
    }//GEN-LAST:event_viewSportButtonActionPerformed

    private void viewAthleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewAthleteButtonMouseClicked
        viewAthleteButton.setEnabled(true);
        viewEventButton.setSelected(false);
        viewSportButton.setSelected(false);
    }//GEN-LAST:event_viewAthleteButtonMouseClicked

    private void viewSportButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewSportButtonMouseClicked
        viewSportButton.setEnabled(true);
        viewEventButton.setSelected(false);
        viewAthleteButton.setSelected(false);
    }//GEN-LAST:event_viewSportButtonMouseClicked

    private void viewEventButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewEventButtonMouseClicked
        viewEventButton.setEnabled(true);
        viewAthleteButton.setSelected(false);
        viewSportButton.setSelected(false);
    }//GEN-LAST:event_viewEventButtonMouseClicked

    private void viewEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEventButtonActionPerformed
        Connection conn = null;
        Statement stmt = null;
        ArrayList<Event> eventList = new ArrayList<>();
        ArrayList<Athlete> athleteList = new ArrayList<>();
        ArrayList<Sport> sportList = new ArrayList<>();
        
        try{
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection(url);
            stmt = conn.createStatement();
            
            String exe = "SELECT * FROM Event ORDER BY eventName ASC";
            ResultSet rs = stmt.executeQuery(exe);
            
            while(rs.next()){
                Event event = new Event(rs.getInt("athleteID"), rs.getInt("sportID"), rs.getString("eventName"), rs.getString("eventVenue"), rs.getString("eventMonth"), rs.getInt("eventDay"), rs.getInt("eventYear"), rs.getString("eventTime"));
                eventList.add(event);
            }
            
            exe = "SELECT athleteID, athleteName FROM Athlete";
            rs = stmt.executeQuery(exe);
            while(rs.next()){
                Athlete athlete = new Athlete(rs.getInt("athleteID"), rs.getString("athleteName"));
                athleteList.add(athlete);
            }
            
            exe = "SELECT sportID, sportName FROM Sport";
            rs = stmt.executeQuery(exe);
            while(rs.next()){
                Sport sport = new Sport(rs.getInt("sportID"), rs.getString("sportName"));
                sportList.add(sport);
            }
            
            rs.close();
        }catch(SQLException e){
            System.out.println("SQLException from 'AddMenu.java-viewEventButton': " + e.getMessage());
        }catch(Exception e){
            System.out.println("Exception from 'AddMenu.java-viewEventButton': " + e.getMessage());
        }finally{
            try{
                if(stmt != null){
                    conn.close();
                }
            }catch(SQLException e){
                e.printStackTrace();
            }
        }
        
        int number = 1;
        String name = eventList.get(0).getName();
        String list = "\t\t\t        EVENTS\n";
        list += number + ". " + name + "\n";
        list += "          Athletes:\n";
        
        for(int i = 0; i < eventList.size(); i++){
            Event e = eventList.get(i);
            
            if(name.equals(e.getName())){
                list = athleteList(list, athleteList, e, sportList);
            }else{
                number++;
                list += "\n" + number + ". " + e.getName() + "\n";
                list += "          Athletes:\n";
                list = athleteList(list, athleteList, e, sportList);
            }
            name = e.getName();
        }
        
        viewTextArea.setText(list);
    }//GEN-LAST:event_viewEventButtonActionPerformed

    private String athleteList(String list, ArrayList<Athlete> athleteList, Event e, ArrayList<Sport> sportList){
        for(Athlete a : athleteList){
            if(e.getAthleteID() == a.getID()){
                list += "               - " + a.getName() + "\n                    Schedule: " + e.getMonth() + " " + e.getDay() + ", " + e.getYear() + " " + e.getTime();
                for(Sport s : sportList){
                    if(e.getSportID() == s.getID()){
                        list += "  | |  " + s.getName() + "\n";
                    }
                }
            }
        }
        return list;
    }
    
    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        GUI menu = new GUI();
        this.setVisible(false);
        menu.setVisible(true);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void defaultAthleteView(){
        Connection conn = null;
        Statement stmt = null;
        ArrayList<Athlete> athleteList = new ArrayList<>();
        
        try{
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection(url);
            stmt = conn.createStatement();
            
            String exe = "SELECT * FROM Athlete ORDER BY athleteName ASC";
            ResultSet rs = stmt.executeQuery(exe);
            
            while(rs.next()){
                Athlete athlete = new Athlete(rs.getInt("athleteID"), rs.getString("athleteName"), rs.getInt("athleteAge"), rs.getFloat("athleteHeight"), rs.getFloat("athleteWeight"));
                athleteList.add(athlete);
            }
            
            rs.close();
        }catch(SQLException e){
            System.out.println("SQLException from 'AddMenu.java-viewAthleteButton': " + e.getMessage());
        }catch(Exception e){
            System.out.println("Exception from 'AddMenu.java-viewAthleteButton': " + e.getMessage());
        }finally{
            try{
                if(stmt != null){
                    conn.close();
                }
            }catch(SQLException e){
                e.printStackTrace();
            }
        }
        
        String list = "\t\t\t        ATHLETES\n";
        int i = 1;
        for(Athlete a : athleteList){
            list += i + ". " + a.getName() + "\n\tID: " + a.getID() + "\n\tAge: " + a.getAge() + "\n\tHeight: " + a.getHeight() + "\n\tWeight: " + a.getWeight() + "\n\n";
            i++;
        }
        
        viewTextArea.setText(list);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAthleteButton;
    private javax.swing.JButton addEventButton;
    private javax.swing.JButton addSportButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mainMenuButton;
    private javax.swing.JRadioButton viewAthleteButton;
    private javax.swing.JRadioButton viewEventButton;
    private javax.swing.JRadioButton viewSportButton;
    private javax.swing.JTextArea viewTextArea;
    // End of variables declaration//GEN-END:variables
}
